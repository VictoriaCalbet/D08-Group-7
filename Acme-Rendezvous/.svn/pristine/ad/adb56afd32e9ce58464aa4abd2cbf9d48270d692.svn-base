
package controllers;

import java.util.ArrayList;
import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import services.RendezvousService;
import domain.Rendezvous;
import domain.User;

@Controller
@RequestMapping("/user")
public class UserController extends AbstractController {

	@Autowired
	private RendezvousService	rendezvousService;


	public UserController() {
		super();
	}

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public ModelAndView list(@RequestParam final int rendezvousId, @RequestParam(required = false) final String message) {
		final ModelAndView result;
		Collection<User> users = new ArrayList<User>();

		final Rendezvous r = this.rendezvousService.findOne(rendezvousId);
		users = r.getAttendants();

		result = new ModelAndView("user/list");
		result.addObject("users", users);
		result.addObject("message", message);
		result.addObject("requestURI", "user/list.do");
		result.addObject("r", r);
		result.addObject("rendezvousId", rendezvousId);

		return result;
	}

	@RequestMapping(value = "/info", method = RequestMethod.GET)
	public ModelAndView info(@RequestParam final int rendezvousId) {
		ModelAndView result = new ModelAndView();

		final Rendezvous r = this.rendezvousService.findOne(rendezvousId);
		final User user = r.getCreator();

		result = this.infoModelAndView(user);
		return result;
	}

	// Ancillaty methods
	protected ModelAndView infoModelAndView(final User user) {
		ModelAndView result;

		result = this.infoModelAndView(user, null);

		return result;
	}

	protected ModelAndView infoModelAndView(final User user, final String message) {
		ModelAndView result;

		result = new ModelAndView("user/info");
		result.addObject("user", user);
		result.addObject("message", message);

		return result;
	}

}
