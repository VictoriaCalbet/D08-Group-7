
package controllers.user;

import java.util.ArrayList;
import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import services.RSVPService;
import services.RendezvousService;
import services.UserService;
import services.form.RendezvousFormService;
import controllers.AbstractController;
import domain.RSVP;
import domain.Rendezvous;
import domain.User;
import domain.form.RendezvousForm;

@Controller
@RequestMapping("/RSVP/user")
public class RSVPUserController extends AbstractController {

	@Autowired
	private RendezvousService		rendezvousService;

	@Autowired
	private RSVPService				RSVPService;

	@Autowired
	private RendezvousFormService	rendezvousFormService;

	@Autowired
	private UserService				userService;


	// Constructors -----------------------------------------------------------

	public RSVPUserController() {
		super();
	}

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public ModelAndView list(@RequestParam(required = false) final String message) {
		ModelAndView result;
		Collection<RSVP> rsvps = new ArrayList<RSVP>();

		final User u = this.userService.findByPrincipal();
		rsvps = u.getRsvps();
		final Collection<Rendezvous> rendezvouses = new ArrayList<Rendezvous>();
		for (final RSVP rsvp : rsvps)
			rendezvouses.add(rsvp.getRendezvous());
		result = new ModelAndView("rendezvous/list");
		result.addObject("rendezvouses", rendezvouses);
		result.addObject("message", message);
		result.addObject("requestURI", "rendezvous/user/list.do");

		return result;
	}

	// Ancillaty methods
	protected ModelAndView createModelAndView(final RendezvousForm rendezvousForm) {
		ModelAndView result;

		result = this.createModelAndView(rendezvousForm, null);

		return result;
	}

	protected ModelAndView createModelAndView(final RendezvousForm rendezvousForm, final String message) {
		ModelAndView result;

		result = new ModelAndView("rendezvous/user/create");
		result.addObject("rendezvousForm", rendezvousForm);
		result.addObject("message", message);

		return result;
	}

}
