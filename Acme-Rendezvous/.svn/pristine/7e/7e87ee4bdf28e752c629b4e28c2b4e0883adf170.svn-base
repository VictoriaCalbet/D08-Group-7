package controllers.administrator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import services.CommentService;
import services.form.CommentFormService;

import controllers.AbstractController;
import domain.Comment;
import forms.CommentForm;


@Controller
@RequestMapping("/comment/administrator")
public class CommentAdministratorController extends AbstractController{
	
	//Constructor
	
	//Supporting services
	@Autowired
	private CommentService commentService;
	
	@Autowired
	private CommentFormService commentFormService;
	
	
	//Edit
	
	@RequestMapping(value = "/edit", method = RequestMethod.GET)
	public ModelAndView edit(@RequestParam final int commentId) {
		final ModelAndView result;
		Comment comment;

		comment = this.commentService.findOne(commentId);
		result = this.editModelAndView(comment);

		return result;

	}

	//Delete
		@RequestMapping(value = "/edit", method = RequestMethod.POST, params="delete")
		public ModelAndView delete(final Comment comment, BindingResult binding) {
			ModelAndView result;
			
			try {
				this.commentService.delete(comment);
				result = new ModelAndView("redirect:/rendezvous/list.do");
			} catch (final Throwable oops) {
				String messageError = "comment.commit.error";
				if (oops.getMessage().contains("message.error"))
					messageError = oops.getMessage();
				result = new ModelAndView("redirect:/rendezvous/list.do");
				result.addObject("message", messageError);
			}
			return result;
		}
		
		
		protected ModelAndView editModelAndView(final Comment comment) {
			ModelAndView result;

			result = this.editModelAndView(comment, null);

			return result;
		}

		protected ModelAndView editModelAndView(final Comment comment, final String message) {
			ModelAndView result;

			result = new ModelAndView("comment/administrator/edit");
			result.addObject("comment", comment);
			result.addObject("message", message);
			result.addObject("requestURI", "comment/administrator/edit.do");

			return result;
		}
	
}
