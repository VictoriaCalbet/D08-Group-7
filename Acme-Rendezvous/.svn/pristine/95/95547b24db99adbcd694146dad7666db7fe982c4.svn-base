
package services;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;

import repositories.AdministratorRepository;
import security.UserAccount;
import security.UserAccountService;
import domain.Actor;
import domain.Administrator;

@Service
@Transactional
public class AdministratorService {

	// Managed Repository -----------------------------------------------------

	@Autowired
	private AdministratorRepository	administratorRepository;

	// Supporting services ----------------------------------------------------

	@Autowired
	private UserAccountService		userAccountService;


	// Constructors -----------------------------------------------------------

	public AdministratorService() {
		super();
	}

	// Simple CRUD methods ----------------------------------------------------

	public Administrator create() {
		Administrator result = null;
		UserAccount userAccount = null;

		result = new Administrator();
		userAccount = this.userAccountService.create("ADMINISTRATOR");
		result.setUserAccount(userAccount);

		return result;
	}

	public Collection<Administrator> findAll() {
		Collection<Administrator> result = null;
		result = this.administratorRepository.findAll();
		return result;
	}

	public Administrator findOne(final int administratorId) {
		Administrator result = null;
		result = this.administratorRepository.findOne(administratorId);
		return result;
	}

	public Actor save(final Administrator administrator) {
		Assert.notNull(administrator, "message.error.administrator.null");
		final Administrator result = null;

		// TODO: AdministratorService - Save: terminar

		return result;

	}

	// No es necesario el método delete

	// Other business methods -------------------------------------------------
}
